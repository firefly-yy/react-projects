{"ast":null,"code":"import _toConsumableArray from\"/Users/sakura/Desktop/react-projects/amazon-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/sakura/Desktop/react-projects/amazon-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var initialState={basket:[],user:null};export var getBasketTotal=function getBasketTotal(basket){return basket===null||basket===void 0?void 0:basket.reduce(function(amount,item){return item.price+amount;},0);};var reducer=function reducer(state,action){console.log(action);switch(action.type){case'ADD_TO_BASKET'://Logic for adding item to basket\nreturn _objectSpread(_objectSpread({},state),{},{basket:[].concat(_toConsumableArray(state.basket),[action.item])});case'REMOVE_FROM_BASKET'://Logic for Removing item from basket\n//we cloned the basket\nvar newBasket=_toConsumableArray(state.basket);//we check to see if product exists\nvar index=state.basket.findIndex(function(basketItem){return basketItem.id===action.id;});if(index>=0){// item exists in basket, remove it...\nnewBasket.splice(index,1);}else{console.warn(\"Can't remove product (id: \".concat(action.id,\") as it's not in basket!\"));}return _objectSpread(_objectSpread({},state),{},{basket:newBasket});default:return state;}};export default reducer;","map":{"version":3,"sources":["/Users/sakura/Desktop/react-projects/amazon-demo/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","newBasket","index","findIndex","basketItem","id","splice","warn"],"mappings":"qVAAA,MAAO,IAAMA,CAAAA,YAAY,CAAG,CACxBC,MAAM,CAAE,EADgB,CAExBC,IAAI,CAAE,IAFkB,CAArB,CAKP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,MAAD,QAC9BA,CAAAA,MAD8B,SAC9BA,MAD8B,iBAC9BA,MAAM,CAAEG,MAAR,CAAe,SAACC,MAAD,CAAQC,IAAR,QAAiBA,CAAAA,IAAI,CAACC,KAAL,CAAaF,MAA9B,EAAf,CAAoD,CAApD,CAD8B,EAAvB,CAGP,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC/BC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACA,OAAOA,MAAM,CAACG,IAAd,EACI,IAAK,eAAL,CACI;AACA,sCACOJ,KADP,MAEIR,MAAM,8BAAMQ,KAAK,CAACR,MAAZ,GAAoBS,MAAM,CAACJ,IAA3B,EAFV,GAIJ,IAAK,oBAAL,CACI;AAEA;AACA,GAAIQ,CAAAA,SAAS,oBAAOL,KAAK,CAACR,MAAb,CAAb,CAEA;AACA,GAAMc,CAAAA,KAAK,CAAGN,KAAK,CAACR,MAAN,CAAae,SAAb,CACV,SAACC,UAAD,QAAgBA,CAAAA,UAAU,CAACC,EAAX,GAAkBR,MAAM,CAACQ,EAAzC,EADU,CAAd,CAIA,GAAGH,KAAK,EAAI,CAAZ,CAAc,CACV;AACAD,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,CAAwB,CAAxB,EAEH,CAJD,IAIO,CACHJ,OAAO,CAACS,IAAR,qCACiCV,MAAM,CAACQ,EADxC,8BAGH,CAED,sCACOT,KADP,MAEIR,MAAM,CAAEa,SAFZ,GAIJ,QACI,MAAOL,CAAAA,KAAP,CAjCR,CAmCH,CArCD,CAuCA,cAAeD,CAAAA,OAAf","sourcesContent":["export const initialState = {\n    basket: [],\n    user: null,\n};\n\nexport const getBasketTotal = (basket) => \nbasket?.reduce((amount,item) => item.price + amount,0);\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch(action.type) {\n        case 'ADD_TO_BASKET':\n            //Logic for adding item to basket\n            return { \n                ...state,\n                basket: [...state.basket, action.item],\n             }\n        case 'REMOVE_FROM_BASKET':\n            //Logic for Removing item from basket\n           \n            //we cloned the basket\n            let newBasket = [...state.basket];\n             \n            //we check to see if product exists\n            const index = state.basket.findIndex(\n                (basketItem) => basketItem.id === action.id\n            );\n            \n            if(index >= 0){\n                // item exists in basket, remove it...\n                newBasket.splice(index, 1);\n                \n            } else {\n                console.warn(\n                    `Can't remove product (id: ${action.id}) as it's not in basket!`\n                );\n            }\n\n            return {\n                ...state,\n                basket: newBasket,\n            };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}